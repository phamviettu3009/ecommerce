{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/services/server/storefront-shopify.ts"],"sourcesContent":["import { createStorefrontApiClient } from \"@shopify/storefront-api-client\";\n\nconst storeFrontShopify = createStorefrontApiClient({\n    storeDomain: process.env.NEXT_PUBLIC_STORE_DOMAIN!,\n    apiVersion: process.env.NEXT_PUBLIC_API_VERSION!,\n    publicAccessToken: process.env.NEXT_PUBLIC_STORE_API_TOKEN!,\n});\n\nexport default storeFrontShopify;\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,oBAAoB,CAAA,GAAA,kMAAA,CAAA,4BAAyB,AAAD,EAAE;IAChD,WAAW;IACX,UAAU;IACV,iBAAiB;AACrB;uCAEe"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/services/server/admin-shopify.ts"],"sourcesContent":["import { createAdminApiClient } from \"@shopify/admin-api-client\";\n\nconst adminShopify = createAdminApiClient({\n    storeDomain: process.env.NEXT_PUBLIC_STORE_DOMAIN!,\n    apiVersion: process.env.NEXT_PUBLIC_API_VERSION!,\n    accessToken: process.env.NEXT_PUBLIC_ADMIN_API_TOKEN!,\n});\n\nexport default adminShopify;\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,eAAe,CAAA,GAAA,mLAAA,CAAA,uBAAoB,AAAD,EAAE;IACtC,WAAW;IACX,UAAU;IACV,WAAW;AACf;uCAEe"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/services/server/customerImpl.ts"],"sourcesContent":["import { AccountSignUp } from \"../../types/accountSignUp\";\nimport { Customer } from \"../../types/customer\";\nimport { CustomerAccessTokenCreate } from \"../../types/customerAccessToken\";\nimport { CustomerAccessTokenDelete } from \"../../types/customerAccessTokenDelete\";\nimport { CustomerCreate } from \"../../types/customerCreate\";\nimport { CustomerService } from \"./customer\";\nimport storeFrontShopify from \"./storefront-shopify\";\nimport adminShopify from \"./admin-shopify\";\n\nexport function createCustomerServiceInstance(): CustomerService {\n    return new CustomerServiceImpl();\n}\n\nclass CustomerServiceImpl implements CustomerService {\n    async createAccessToken(email: string, password: string): Promise<CustomerAccessTokenCreate | undefined> {\n        const CUSTOMER_ACCESS_TOKEN_CREATE = `\n            mutation CustomerAccessTokenCreate($email: String!, $password: String!) {\n                customerAccessTokenCreate(\n                    input: { email: $email, password: $password }\n                ) {\n                    customerAccessToken {\n                        accessToken\n                        expiresAt\n                    }\n                    customerUserErrors {\n                        code\n                        field\n                        message\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n        `;\n\n        const response = await storeFrontShopify.request(CUSTOMER_ACCESS_TOKEN_CREATE, {\n            variables: { email, password },\n        });\n\n        return response?.data?.customerAccessTokenCreate;\n    }\n\n    async deleteAccessToken(customerAccessToken: string): Promise<CustomerAccessTokenDelete | undefined> {\n        const CUSTOMER_ACCESS_TOKEN_DELETE = `\n            mutation CustomerAccessTokenDelete($customerAccessToken: String!) {\n                customerAccessTokenDelete(customerAccessToken: $customerAccessToken) {\n                    deletedAccessToken\n                    deletedCustomerAccessTokenId\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n        `;\n\n        const response = await storeFrontShopify.request(CUSTOMER_ACCESS_TOKEN_DELETE, {\n            variables: { customerAccessToken: customerAccessToken },\n        });\n\n        return response?.data?.customerAccessTokenDelete;\n    }\n\n    async createCustomer(account: AccountSignUp): Promise<CustomerCreate> {\n        const CREATE_CUSTOMER = `\n            mutation CustomerCreate($email: String!, $password: String!, $phone: String!) {\n                customerCreate(\n                    input: { email: $email, password: $password, phone: $phone }\n                ) {\n                    customer {\n                        acceptsMarketing\n                        createdAt\n                        displayName\n                        email\n                        firstName\n                        id\n                        lastName\n                        numberOfOrders\n                        phone\n                        tags\n                        updatedAt\n                    }\n                    customerUserErrors {\n                        code\n                        field\n                        message\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n        `;\n\n        const response = await storeFrontShopify.request(CREATE_CUSTOMER, {\n            variables: { email: account.email, password: account.password, phone: account.phone },\n        });\n\n        return response?.data?.customerCreate;\n    }\n\n    async updateCustomerCart(customerID: string, cartID: string): Promise<any> {\n        const UPDATE_CUSTOMER_CART = `\n            mutation CustomerUpdate($customerID: ID!, $cartID: String!) {\n                customerUpdate(\n                    input: { tags: [$cartID], id: $customerID }\n                ) {\n                    customer {\n                        id\n                        tags\n                    }\n                }\n            }\n        `;\n\n        const response = await adminShopify.request(UPDATE_CUSTOMER_CART, {\n            variables: { customerID: customerID, cartID: cartID },\n        });\n\n        console.info(\"error: ====>\", response.errors);\n\n        return response.data;\n    }\n\n    async getCustomer(customerAccessToken: string): Promise<Customer | null> {\n        const GET_CUSTOMER = `\n            query Customer($customerAccessToken: String!) {\n                customer(customerAccessToken: $customerAccessToken) {\n                    acceptsMarketing\n                    createdAt\n                    displayName\n                    email\n                    firstName\n                    id\n                    lastName\n                    numberOfOrders\n                    phone\n                    tags\n                    updatedAt\n                }\n            }\n        `;\n\n        const response = await storeFrontShopify.fetch(GET_CUSTOMER, { variables: { customerAccessToken } });\n        const { data } = await response.json();\n\n        return data.customer;\n    }\n}\n"],"names":[],"mappings":";;;AAMA;AACA;;;AAEO,SAAS;IACZ,OAAO,IAAI;AACf;AAEA,MAAM;IACF,MAAM,kBAAkB,KAAa,EAAE,QAAgB,EAAkD;QACrG,MAAM,+BAA+B,CAAC;;;;;;;;;;;;;;;;;;;;QAoBtC,CAAC;QAED,MAAM,WAAW,MAAM,2JAAA,CAAA,UAAiB,CAAC,OAAO,CAAC,8BAA8B;YAC3E,WAAW;gBAAE;gBAAO;YAAS;QACjC;QAEA,OAAO,UAAU,MAAM;IAC3B;IAEA,MAAM,kBAAkB,mBAA2B,EAAkD;QACjG,MAAM,+BAA+B,CAAC;;;;;;;;;;;QAWtC,CAAC;QAED,MAAM,WAAW,MAAM,2JAAA,CAAA,UAAiB,CAAC,OAAO,CAAC,8BAA8B;YAC3E,WAAW;gBAAE,qBAAqB;YAAoB;QAC1D;QAEA,OAAO,UAAU,MAAM;IAC3B;IAEA,MAAM,eAAe,OAAsB,EAA2B;QAClE,MAAM,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA6BzB,CAAC;QAED,MAAM,WAAW,MAAM,2JAAA,CAAA,UAAiB,CAAC,OAAO,CAAC,iBAAiB;YAC9D,WAAW;gBAAE,OAAO,QAAQ,KAAK;gBAAE,UAAU,QAAQ,QAAQ;gBAAE,OAAO,QAAQ,KAAK;YAAC;QACxF;QAEA,OAAO,UAAU,MAAM;IAC3B;IAEA,MAAM,mBAAmB,UAAkB,EAAE,MAAc,EAAgB;QACvE,MAAM,uBAAuB,CAAC;;;;;;;;;;;QAW9B,CAAC;QAED,MAAM,WAAW,MAAM,sJAAA,CAAA,UAAY,CAAC,OAAO,CAAC,sBAAsB;YAC9D,WAAW;gBAAE,YAAY;gBAAY,QAAQ;YAAO;QACxD;QAEA,QAAQ,IAAI,CAAC,gBAAgB,SAAS,MAAM;QAE5C,OAAO,SAAS,IAAI;IACxB;IAEA,MAAM,YAAY,mBAA2B,EAA4B;QACrE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;QAgBtB,CAAC;QAED,MAAM,WAAW,MAAM,2JAAA,CAAA,UAAiB,CAAC,KAAK,CAAC,cAAc;YAAE,WAAW;gBAAE;YAAoB;QAAE;QAClG,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,SAAS,IAAI;QAEpC,OAAO,KAAK,QAAQ;IACxB;AACJ"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/services/server/customer.ts"],"sourcesContent":["import { AccountSignUp } from \"../../types/accountSignUp\";\nimport { Customer } from \"../../types/customer\";\nimport { CustomerAccessTokenCreate } from \"../../types/customerAccessToken\";\nimport { CustomerAccessTokenDelete } from \"../../types/customerAccessTokenDelete\";\nimport { CustomerCreate } from \"../../types/customerCreate\";\nimport { createCustomerServiceInstance } from \"./customerImpl\";\n\nexport interface CustomerService {\n    createAccessToken: (email: string, password: string) => Promise<CustomerAccessTokenCreate | undefined>;\n    deleteAccessToken: (customerAccessToken: string) => Promise<CustomerAccessTokenDelete | undefined>;\n    createCustomer: (account: AccountSignUp) => Promise<CustomerCreate>;\n    updateCustomerCart: (customerID: string, cartID: string) => Promise<any>;\n    getCustomer: (customerAccessToken: string) => Promise<Customer | null>;\n}\n\nconst customerService: CustomerService = createCustomerServiceInstance();\nexport default customerService;\n"],"names":[],"mappings":";;;AAKA;;AAUA,MAAM,kBAAmC,CAAA,GAAA,kJAAA,CAAA,gCAA6B,AAAD;uCACtD"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/api/auth/sign-out/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport cookie from \"cookie\";\nimport customerService from \"@/app/services/server/customer\";\nimport { CustomerAccessTokenDelete } from \"@/app/types/customerAccessTokenDelete\";\n\nexport async function POST(request: NextRequest) {\n    const cookies = cookie.parse(request.headers.get(\"cookie\") || \"\");\n    const accessToken: string = cookies.accessToken;\n\n    if (accessToken) {\n        const response: CustomerAccessTokenDelete | undefined = await customerService.deleteAccessToken(accessToken);\n\n        if (response?.deletedAccessToken) {\n            const res = NextResponse.json({ message: \"Sign out successes!\", signOut: true });\n\n            res.cookies.set(\"accessToken\", \"\", {\n                httpOnly: true,\n                secure: process.env.NODE_ENV === \"production\",\n                path: \"/\",\n                maxAge: 0,\n            });\n\n            return res;\n        }\n    }\n\n    return NextResponse.json({ message: \"Sign out failure!\", signOut: false });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAGO,eAAe,KAAK,OAAoB;IAC3C,MAAM,UAAU,iIAAA,CAAA,UAAM,CAAC,KAAK,CAAC,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;IAC9D,MAAM,cAAsB,QAAQ,WAAW;IAE/C,IAAI,aAAa;QACb,MAAM,WAAkD,MAAM,8IAAA,CAAA,UAAe,CAAC,iBAAiB,CAAC;QAEhG,IAAI,UAAU,oBAAoB;YAC9B,MAAM,MAAM,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAuB,SAAS;YAAK;YAE9E,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI;gBAC/B,UAAU;gBACV,QAAQ,oDAAyB;gBACjC,MAAM;gBACN,QAAQ;YACZ;YAEA,OAAO;QACX;IACJ;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAqB,SAAS;IAAM;AAC5E"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}