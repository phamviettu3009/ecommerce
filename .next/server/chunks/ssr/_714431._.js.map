{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/customer/Sidebar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/customer/Sidebar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/customer/Sidebar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/customer/Sidebar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/customer/Sidebar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/customer/Sidebar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/services/server/customerImpl.ts"],"sourcesContent":["import { AccountSignUp } from \"../../types/accountSignUp\";\nimport { Customer } from \"../../types/customer\";\nimport { CustomerAccessTokenCreate } from \"../../types/customerAccessToken\";\nimport { CustomerAccessTokenDelete } from \"../../types/customerAccessTokenDelete\";\nimport { CustomerCreate } from \"../../types/customerCreate\";\nimport { CustomerService } from \"./customer\";\nimport client from \"./storefront\";\n\nexport function createCustomerServiceInstance(): CustomerService {\n    return new CustomerServiceImpl();\n}\n\nclass CustomerServiceImpl implements CustomerService {\n    async createAccessToken(email: string, password: string): Promise<CustomerAccessTokenCreate | undefined> {\n        const CUSTOMER_ACCESS_TOKEN_CREATE = `\n            mutation CustomerAccessTokenCreate($email: String!, $password: String!) {\n                customerAccessTokenCreate(\n                    input: { email: $email, password: $password }\n                ) {\n                    customerAccessToken {\n                        accessToken\n                        expiresAt\n                    }\n                    customerUserErrors {\n                        code\n                        field\n                        message\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n        `;\n\n        const response = await client.request(CUSTOMER_ACCESS_TOKEN_CREATE, {\n            variables: { email, password },\n        });\n\n        return response?.data?.customerAccessTokenCreate;\n    }\n\n    async deleteAccessToken(customerAccessToken: string): Promise<CustomerAccessTokenDelete | undefined> {\n        const CUSTOMER_ACCESS_TOKEN_DELETE = `\n            mutation CustomerAccessTokenDelete($customerAccessToken: String!) {\n                customerAccessTokenDelete(customerAccessToken: $customerAccessToken) {\n                    deletedAccessToken\n                    deletedCustomerAccessTokenId\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n        `;\n\n        const response = await client.request(CUSTOMER_ACCESS_TOKEN_DELETE, {\n            variables: { customerAccessToken: customerAccessToken },\n        });\n\n        console.info(\"====> \", response.data);\n\n        return response?.data?.customerAccessTokenDelete;\n    }\n\n    async createCustomer(account: AccountSignUp): Promise<CustomerCreate> {\n        const CREATE_CUSTOMER = `\n            mutation CustomerCreate($email: String!, $password: String!, $phone: String!) {\n                customerCreate(\n                    input: { email: $email, password: $password, phone: $phone }\n                ) {\n                    customer {\n                        acceptsMarketing\n                        createdAt\n                        displayName\n                        email\n                        firstName\n                        id\n                        lastName\n                        numberOfOrders\n                        phone\n                        tags\n                        updatedAt\n                    }\n                    customerUserErrors {\n                        code\n                        field\n                        message\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n        `;\n\n        const response = await client.request(CREATE_CUSTOMER, {\n            variables: { email: account.email, password: account.password, phone: account.phone },\n        });\n\n        console.info(\"======>\", response.data);\n\n        return response?.data?.customerCreate;\n    }\n\n    async getCustomer(customerAccessToken: string): Promise<Customer | null> {\n        const GET_CUSTOMER = `\n            query Customer($customerAccessToken: String!) {\n                customer(customerAccessToken: $customerAccessToken) {\n                    acceptsMarketing\n                    createdAt\n                    displayName\n                    email\n                    firstName\n                    id\n                    lastName\n                    numberOfOrders\n                    phone\n                    tags\n                    updatedAt\n                }\n            }\n        `;\n\n        const response = await client.fetch(GET_CUSTOMER, { variables: { customerAccessToken } });\n        const { data } = await response.json();\n\n        return data.customer;\n    }\n}\n"],"names":[],"mappings":";;;AAMA;;AAEO,SAAS;IACZ,OAAO,IAAI;AACf;AAEA,MAAM;IACF,MAAM,kBAAkB,KAAa,EAAE,QAAgB,EAAkD;QACrG,MAAM,+BAA+B,CAAC;;;;;;;;;;;;;;;;;;;;QAoBtC,CAAC;QAED,MAAM,WAAW,MAAM,8IAAA,CAAA,UAAM,CAAC,OAAO,CAAC,8BAA8B;YAChE,WAAW;gBAAE;gBAAO;YAAS;QACjC;QAEA,OAAO,UAAU,MAAM;IAC3B;IAEA,MAAM,kBAAkB,mBAA2B,EAAkD;QACjG,MAAM,+BAA+B,CAAC;;;;;;;;;;;QAWtC,CAAC;QAED,MAAM,WAAW,MAAM,8IAAA,CAAA,UAAM,CAAC,OAAO,CAAC,8BAA8B;YAChE,WAAW;gBAAE,qBAAqB;YAAoB;QAC1D;QAEA,QAAQ,IAAI,CAAC,UAAU,SAAS,IAAI;QAEpC,OAAO,UAAU,MAAM;IAC3B;IAEA,MAAM,eAAe,OAAsB,EAA2B;QAClE,MAAM,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA6BzB,CAAC;QAED,MAAM,WAAW,MAAM,8IAAA,CAAA,UAAM,CAAC,OAAO,CAAC,iBAAiB;YACnD,WAAW;gBAAE,OAAO,QAAQ,KAAK;gBAAE,UAAU,QAAQ,QAAQ;gBAAE,OAAO,QAAQ,KAAK;YAAC;QACxF;QAEA,QAAQ,IAAI,CAAC,WAAW,SAAS,IAAI;QAErC,OAAO,UAAU,MAAM;IAC3B;IAEA,MAAM,YAAY,mBAA2B,EAA4B;QACrE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;QAgBtB,CAAC;QAED,MAAM,WAAW,MAAM,8IAAA,CAAA,UAAM,CAAC,KAAK,CAAC,cAAc;YAAE,WAAW;gBAAE;YAAoB;QAAE;QACvF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,SAAS,IAAI;QAEpC,OAAO,KAAK,QAAQ;IACxB;AACJ"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/services/server/customer.ts"],"sourcesContent":["import { AccountSignUp } from \"../../types/accountSignUp\";\nimport { Customer } from \"../../types/customer\";\nimport { CustomerAccessTokenCreate } from \"../../types/customerAccessToken\";\nimport { CustomerAccessTokenDelete } from \"../../types/customerAccessTokenDelete\";\nimport { CustomerCreate } from \"../../types/customerCreate\";\nimport { createCustomerServiceInstance } from \"./customerImpl\";\n\nexport interface CustomerService {\n    createAccessToken: (email: string, password: string) => Promise<CustomerAccessTokenCreate | undefined>;\n    deleteAccessToken: (customerAccessToken: string) => Promise<CustomerAccessTokenDelete | undefined>;\n    createCustomer: (account: AccountSignUp) => Promise<CustomerCreate>;\n    getCustomer: (customerAccessToken: string) => Promise<Customer | null>;\n}\n\nconst customerService: CustomerService = createCustomerServiceInstance();\nexport default customerService;\n"],"names":[],"mappings":";;;AAKA;;AASA,MAAM,kBAAmC,CAAA,GAAA,gJAAA,CAAA,gCAA6B,AAAD;uCACtD"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/customer/page.tsx"],"sourcesContent":["import React from \"react\";\nimport { cookies } from \"next/headers\";\nimport Sidebar from \"./Sidebar\";\nimport { Customer } from \"../types/customer\";\nimport customerService from \"../services/server/customer\";\nimport { redirect } from \"next/navigation\";\n\nasync function CustomerPage() {\n    const cookieStore = cookies();\n    const accessToken: string | undefined = (await cookieStore).get(\"accessToken\")?.value ?? \"\";\n\n    const customer: Customer | null = await customerService.getCustomer(accessToken);\n\n    if (customer === null) {\n        redirect(\"/auth/sign-in\");\n    }\n\n    return (\n        <div>\n            <div>{customer?.displayName}</div>\n            <Sidebar />\n        </div>\n    );\n}\n\nexport default CustomerPage;\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AAAA;;;;;;AAEA,eAAe;IACX,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,MAAM,cAAkC,CAAC,MAAM,WAAW,EAAE,GAAG,CAAC,gBAAgB,SAAS;IAEzF,MAAM,WAA4B,MAAM,4IAAA,CAAA,UAAe,CAAC,WAAW,CAAC;IAEpE,IAAI,aAAa,MAAM;QACnB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACb;IAEA,qBACI,8OAAC;;0BACG,8OAAC;0BAAK,UAAU;;;;;;0BAChB,8OAAC,kIAAA,CAAA,UAAO;;;;;;;;;;;AAGpB;uCAEe"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}