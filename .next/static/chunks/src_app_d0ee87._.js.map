{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/constants/theme.ts"],"sourcesContent":["export enum ThemeMode {\n    DARK = \"dark\",\n    LIGHT = \"light\",\n    DEFAULT = \"default\",\n}\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,mCAAA;;;;WAAA"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/utils/theme.ts"],"sourcesContent":["import { ThemeMode } from \"../constants/theme\";\n\nexport const convertTheme = (mode: ThemeMode): ThemeMode => {\n    if (mode === ThemeMode.DEFAULT) {\n        // return window?.matchMedia(\"(prefers-color-scheme: dark)\").matches ? ThemeMode.DARK : ThemeMode.LIGHT;\n        return ThemeMode.LIGHT;\n    }\n\n    return mode;\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,eAAe,CAAC;IACzB,IAAI,SAAS,mIAAA,CAAA,YAAS,CAAC,OAAO,EAAE;QAC5B,wGAAwG;QACxG,OAAO,mIAAA,CAAA,YAAS,CAAC,KAAK;IAC1B;IAEA,OAAO;AACX"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/providers/ThemeProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { createTheme, ThemeProvider as MUIThemeProvider, PaletteMode, Theme } from \"@mui/material\";\nimport { Context, createContext, useState } from \"react\";\nimport { ThemeMode } from \"../constants/theme\";\nimport { convertTheme } from \"../utils/theme\";\n\nexport type ThemeContextType = {\n    option: ThemeMode;\n    theme: string;\n    isDarkMode: boolean;\n    changeTheme: (mode: ThemeMode) => void;\n};\n\nconst ThemeContext: Context<ThemeContextType> = createContext<ThemeContextType>({\n    option: ThemeMode.DEFAULT,\n    theme: \"light\",\n    isDarkMode: false,\n    changeTheme: () => {},\n});\n\ntype ThemeProviderPropsType = React.HTMLProps<Element>;\n\nfunction ThemeProvider({ ...rest }: ThemeProviderPropsType): JSX.Element {\n    const [option, setOption] = useState<ThemeMode>(ThemeMode.DEFAULT);\n    const theme: ThemeMode = convertTheme(option as ThemeMode);\n\n    const isDarkMode: boolean = theme === ThemeMode.DARK;\n\n    const MUITheme: Theme = createTheme({\n        palette: {\n            mode: theme as PaletteMode,\n            primary: {\n                main: \"#274ab3\",\n            },\n            background: {\n                paper: isDarkMode ? \"#141b25\" : \"#f6f7f9\",\n                default: isDarkMode ? \"#141b25\" : \"#f6f7f9\",\n            },\n        },\n        shape: {\n            borderRadius: 8,\n        },\n    });\n\n    const changeTheme = (mode: ThemeMode): void => {\n        setOption(mode);\n    };\n\n    return (\n        <MUIThemeProvider theme={MUITheme}>\n            <ThemeContext.Provider value={{ option, theme, isDarkMode, changeTheme }}>\n                {rest.children}\n            </ThemeContext.Provider>\n        </MUIThemeProvider>\n    );\n}\n\nexport { ThemeContext, ThemeProvider };\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAHA;AAAA;;;AAFA;;;;;AAcA,MAAM,6BAA0C,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAoB;IAC5E,QAAQ,mIAAA,CAAA,YAAS,CAAC,OAAO;IACzB,OAAO;IACP,YAAY;IACZ,aAAa,KAAO;AACxB;AAIA,SAAS,cAAc,EAAE,GAAG,MAA8B;;IACtD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,mIAAA,CAAA,YAAS,CAAC,OAAO;IACjE,MAAM,QAAmB,CAAA,GAAA,+HAAA,CAAA,eAAY,AAAD,EAAE;IAEtC,MAAM,aAAsB,UAAU,mIAAA,CAAA,YAAS,CAAC,IAAI;IAEpD,MAAM,WAAkB,CAAA,GAAA,uNAAA,CAAA,cAAW,AAAD,EAAE;QAChC,SAAS;YACL,MAAM;YACN,SAAS;gBACL,MAAM;YACV;YACA,YAAY;gBACR,OAAO,aAAa,YAAY;gBAChC,SAAS,aAAa,YAAY;YACtC;QACJ;QACA,OAAO;YACH,cAAc;QAClB;IACJ;IAEA,MAAM,cAAc,CAAC;QACjB,UAAU;IACd;IAEA,qBACI,6LAAC,2MAAA,CAAA,gBAAgB;QAAC,OAAO;kBACrB,cAAA,6LAAC,aAAa,QAAQ;YAAC,OAAO;gBAAE;gBAAQ;gBAAO;gBAAY;YAAY;sBAClE,KAAK,QAAQ;;;;;;;;;;;AAI9B;GAjCS;KAAA"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}