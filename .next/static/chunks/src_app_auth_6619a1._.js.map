{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/auth/styles.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"form\": \"styles-module-scss-module__yKohkW__form\",\n  \"page\": \"styles-module-scss-module__yKohkW__page\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/macad/Documents/Project/nextjs/ecommerce/src/app/auth/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useSession, signIn, signOut } from \"next-auth/react\";\nimport styles from \"./styles.module.scss\";\nimport { Button, Divider, FormControl, FormLabel, TextField } from \"@mui/material\";\nimport { Fragment, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Account from \"../types/account\";\nimport authService from \"../services/client/auth\";\nimport SignInResponse from \"../types/signInResponse\";\nimport useAuth from \"../hooks/useAuth\";\n\nfunction AuthScreen() {\n    const {} = useAuth\n    // const { data: session } = useSession();\n    // const [message, setMessage] = useState<string | null>(null);\n\n    // const { control, handleSubmit } = useForm<Account>({\n    //     defaultValues: {\n    //         email: \"\",\n    //         password: \"\",\n    //     },\n    // });\n\n    // const handleLogin = handleSubmit(async (account: Account): Promise<void> => {\n    //     setMessage(null);\n    //     const signIn: SignInResponse = await authService.signIn(account);\n    //     if (!signIn.authed) {\n    //         setMessage(signIn.description);\n    //     }\n    // });\n\n    return (\n        <div className={styles[\"page\"]}>\n            <FormControl className={styles[\"form\"]}>\n                {session ? (\n                    <Fragment>\n                        <p>Welcome, {session.user?.name}</p>\n                        <Button fullWidth variant=\"contained\" onClick={() => signOut()}>\n                            Sign Out\n                        </Button>\n                    </Fragment>\n                ) : (\n                    <Fragment>\n                        <FormLabel className=\"align-self-center fs-4 fw-bold\">Sign In</FormLabel>\n                        <Controller\n                            name=\"email\"\n                            control={control}\n                            render={({ field }) => (\n                                <TextField {...field} id=\"standard-adornment-email\" label=\"Email\" variant=\"standard\" />\n                            )}\n                        />\n                        <Controller\n                            name=\"password\"\n                            control={control}\n                            render={({ field }) => (\n                                <TextField\n                                    {...field}\n                                    id=\"standard-adornment-password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    variant=\"standard\"\n                                />\n                            )}\n                        />\n                        <Button className=\"mt-3\" variant=\"contained\" fullWidth onClick={handleLogin}>\n                            Sign In\n                        </Button>\n                        {message && <p className=\"text-danger\">{message}</p>}\n                        <Divider>OR</Divider>\n                        <Button\n                            variant=\"outlined\"\n                            fullWidth\n                            onClick={() => signIn(\"google\", { callbackUrl: \"http://localhost:3000\" })}\n                        >\n                            Sign In with Google\n                        </Button>\n                    </Fragment>\n                )}\n            </FormControl>\n        </div>\n    );\n}\n\nexport default AuthScreen;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAKA;AANA;AAAA;AAEA;AAFA;AAAA;AAAA;AAJA;;;;;;;;AAYA,SAAS;IACL,MAAM,EAAE,GAAG,iIAAA,CAAA,UAAO;IAClB,0CAA0C;IAC1C,+DAA+D;IAE/D,uDAAuD;IACvD,uBAAuB;IACvB,qBAAqB;IACrB,wBAAwB;IACxB,SAAS;IACT,MAAM;IAEN,gFAAgF;IAChF,wBAAwB;IACxB,wEAAwE;IACxE,4BAA4B;IAC5B,0CAA0C;IAC1C,QAAQ;IACR,MAAM;IAEN,qBACI,6LAAC;QAAI,WAAW,6JAAA,CAAA,UAAM,CAAC,OAAO;kBAC1B,cAAA,6LAAC,4MAAA,CAAA,cAAW;YAAC,WAAW,6JAAA,CAAA,UAAM,CAAC,OAAO;sBACjC,wBACG,6LAAC,6JAAA,CAAA,WAAQ;;kCACL,6LAAC;;4BAAE;4BAAU,QAAQ,IAAI,EAAE;;;;;;;kCAC3B,6LAAC,6LAAA,CAAA,SAAM;wBAAC,SAAS;wBAAC,SAAQ;wBAAY,SAAS,IAAM,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD;kCAAK;;;;;;;;;;;qCAKpE,6LAAC,6JAAA,CAAA,WAAQ;;kCACL,6LAAC,sMAAA,CAAA,YAAS;wBAAC,WAAU;kCAAiC;;;;;;kCACtD,6LAAC,iKAAA,CAAA,aAAU;wBACP,MAAK;wBACL,SAAS;wBACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,sMAAA,CAAA,YAAS;gCAAE,GAAG,KAAK;gCAAE,IAAG;gCAA2B,OAAM;gCAAQ,SAAQ;;;;;;;;;;;kCAGlF,6LAAC,iKAAA,CAAA,aAAU;wBACP,MAAK;wBACL,SAAS;wBACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,sMAAA,CAAA,YAAS;gCACL,GAAG,KAAK;gCACT,IAAG;gCACH,MAAK;gCACL,OAAM;gCACN,SAAQ;;;;;;;;;;;kCAIpB,6LAAC,6LAAA,CAAA,SAAM;wBAAC,WAAU;wBAAO,SAAQ;wBAAY,SAAS;wBAAC,SAAS;kCAAa;;;;;;oBAG5E,yBAAW,6LAAC;wBAAE,WAAU;kCAAe;;;;;;kCACxC,6LAAC,gMAAA,CAAA,UAAO;kCAAC;;;;;;kCACT,6LAAC,6LAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,SAAS;wBACT,SAAS,IAAM,CAAA,GAAA,iJAAA,CAAA,SAAM,AAAD,EAAE,UAAU;gCAAE,aAAa;4BAAwB;kCAC1E;;;;;;;;;;;;;;;;;;;;;;AAQzB;KAtES;uCAwEM"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}